@model VTreeNode<TJVTreeNodeData>
@{
    ViewBag.Title = "NavigationTop.Net.TJNet".ToLocal();
}

@section head{
    <link href="/Content/orgchart.css" rel="stylesheet" />
    <link href="/Content/vtree-net.css" rel="stylesheet" />
}
@*@using (Html.Search(false))
{
    Html.Group("会员帐号", Html.TextBox("userCode", Request.QueryString["userCode"]));
    //Html.Group("显示层数", Html.DropDownList("layout", new SelectListItem[]{
    //    new SelectListItem { Text="2层", Value="2"},
    //    new SelectListItem { Text="3层", Value="3", Selected=true},
    //    new SelectListItem { Text="4层", Value="4"},
    //    new SelectListItem { Text="5层", Value="5"},
    //    new SelectListItem { Text="6层", Value="6"},
    //    new SelectListItem { Text="7层", Value="7"},
    //    new SelectListItem { Text="8层", Value="8"},
    //}));

    Html.SearchBtn();

    Html.Group("", Html.ActionLinkButton("上一层", "TJVTree", "User", routeValues: new { userCode = Model == null ? "" : Model.Data.TJUserCode }));
    Html.Group("", Html.ActionLinkButton("顶层", "TJVTree", "User", routeValues: new { userCode = "" }));
}*@
@*<div class="user-level">
    @{
        for (int i = 0; i < LevelHandler.Collection.Count; i++)
        {
        <label class="user-level-@(i + 1)">@LevelHandler.Collection[i].Name</label>
        }
    }
</div>*@<div class="panel panel-info">
    <div class="panel-heading">@("推荐树状图".ToLocal())</div>
    <div class="panel-body">
<div class="user-level-split"></div>

@helper NodeContentForNormal(VTreeNode<TJVTreeNodeData> node)
{
    var levelCssClass = "user-level-{0}".FormatString(LevelHandler.Element(node.Data.LevelId).Weight);
    <table class="net-node @levelCssClass">
        <tr>
            <td>@Html.ActionLink(node.Data.UserCode, "TJVTree", new { userCode = node.Data.UserCode })</td>
        </tr>
        <tr>
            <td>@(LevelHandler.Element(node.Data.LevelId).Name)
            </td>
        </tr>
        <tr>
            <td>@("团队人数".ToLocal()):@(node.Data.TJTeamCount)
            </td>
        </tr>
        @*        <tr>
            <td>@(node.Data.IsValid ? node.Data.JiHuoDate.Value.ToString() : "未激活")</td>
        </tr>*@
        @*  <tr>
            <td>@(node.Data.IsVirtual ? "Emptysingle".ToLocal() : "Realsimple".ToLocal())</td>
        </tr>*@
    </table>
}

@if (Model != null)
{
    <div style="overflow: auto;width:100%; height:500px;">
        <table class="net-box" style="height: auto;">
            <tr>
                <td align="center">
                    @Html.VTree(Model, m => NodeContentForNormal(m))
                </td>
            </tr>
        </table>
    </div>
}

 </div>
</div>
