@model VTreeNode<JDVTreeNodeData>
@{
    ViewBag.Title = "NavigationTop.Net.JDNet".ToLocal();
}

@section head{
    <link href="/Content/orgchart.css" rel="stylesheet" />
    <link href="/Content/vtree-net.css" rel="stylesheet" />
}

@using (Html.Search(false))
{
    Html.Group("会员帐号".ToLocal(), Html.TextBox("userCode", Request.QueryString["userCode"]));
    Html.Group("显示层数".ToLocal(), Html.DropDownList("layout", new SelectListItem[]{
        new SelectListItem { Text="2层".ToLocal(), Value="2"},
        new SelectListItem { Text="3层".ToLocal(), Value="3", Selected=true},
        new SelectListItem { Text="4层".ToLocal(), Value="4"},
        new SelectListItem { Text="5层".ToLocal(), Value="5"},
        new SelectListItem { Text="6层".ToLocal(), Value="6"},
        new SelectListItem { Text="7层".ToLocal(), Value="7"},
        new SelectListItem { Text="8层".ToLocal(), Value="8"},
    }));

    Html.SearchBtn();

    Html.Group("", Html.ActionLinkButton("上一层".ToLocal(), "JDVTree", "User", routeValues: new { userCode = Model == null ? "" : Model.Data.JDUserCode }));
    Html.Group("", Html.ActionLinkButton("顶层".ToLocal(), "JDVTree", "User", routeValues: new { userCode = "" }));

    foreach (var item in UserJDPosition.UserJDPositionCollection)
    {
        Html.Group("", Html.ActionLinkButton("{0}底层".ToLocal().FormatString(item.PositionName.ToLocal()), "JDVTree", "User", routeValues: new { userCode = Request.QueryString["userCode"], jdposition = item.Position }));
    }
}

<div class="user-level">
    @{
        for (int i = 0; i < LevelHandler.Collection.Count; i++)
        {
        <label class="user-level-@(i + 1)">@LevelHandler.Collection[i].Name</label>
        }
    }
</div>
<div class="user-level-split"></div>

@helper NodeContentForNormal(VTreeNode<JDVTreeNodeData> node)
{
    var levelCssClass = "user-level-{0}".FormatString(LevelHandler.Element(node.Data.LevelId).Weight);
    
    <table class="net-node @levelCssClass">
        <tr>
            <td colspan="3">@Html.ActionLink(node.Data.UserCode + " [" + node.Data.NickName + "]", "JDVTree", new { userCode = node.Data.UserCode })</td>
        </tr>
        <tr>
            <td colspan="3">@(LevelHandler.Element(node.Data.LevelId).Name)</td>
        </tr>
        <tr>
            <td></td>
            <td>@UserJDPosition.POSITION_1_NAME.ToLocal()</td>
            <td>@UserJDPosition.POSITION_2_NAME.ToLocal()</td>
        </tr>
        <tr>
            <td>@("User.DuiPeng.Add".ToLocal())</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td>@("User.DuiPeng.Total".ToLocal())</td>
            <td colspan="2">0</td>
        </tr>
        <tr>
            <td>@("User.DuiPeng.Rest".ToLocal())</td>
            <td>0</td>
            <td>0</td>
        </tr>
        <tr>
            <td colspan="2">@node.Data.JiHuoDate</td>
            <td>@(node.Data.IsVirtual ? "ZX.User.IsVirtual".ToLocal() : "ZX.User.NotVirtual".ToLocal())</td>
        </tr>
    </table>
}

@helper NodeContentForRegister(VTreeNode<JDVTreeNodeData> node)
{
    @Html.ActionLinkButton("NavigationTop.Team.Register".ToLocal(), "Register", "User", new { jdUserId = node.Parent.Data.UserId, jdPosition = node.Data.JDPosition })
}

@helper NodeContentForInvalid(VTreeNode<JDVTreeNodeData> node)
{
    <table class="net-node">
        <tr>
            <td>@Html.ActionLink(node.Data.UserCode + " [" + node.Data.NickName + "]", "JDVTree", new { userCode = node.Data.UserCode })</td>
        </tr>
        <tr>
            <td>@(LevelHandler.Element(node.Data.LevelId).Name)</td>
        </tr>
        <tr>
            <td>@("User.Status.Invalid".ToLocal())</td>
        </tr>
    </table>
}

@if (Model != null)
{
    <table class="net-box">
        <tr>
            <td align="center">
                @Html.VTree(Model, node =>
           {
               if (node.Data.IsRegister)
               {
                   return NodeContentForRegister(node);
               }
               else if (node.Data.IsValid == false)
               {
                   return NodeContentForInvalid(node);
               }
               else
               {
                   return NodeContentForNormal(node);
               }
           })
            </td>
        </tr>
    </table>
}