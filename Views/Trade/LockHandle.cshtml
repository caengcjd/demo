@model Pager<T_TradeUser>
@{
    ViewBag.Title = "投诉处理";
}

@using (Html.Search())
{
    Html.Group("流水号", Html.TextBox("SerialNumber", Request.QueryString["SerialNumber"]));
    Html.Group("买家编号", Html.TextBox("buyUserCode", Request.QueryString["buyUserCode"]));
    Html.Group("卖家编号", Html.TextBox("sellUserCode", Request.QueryString["sellUserCode"]));
}

@(Grid.Create<T_TradeUser>().SetDataSource(Model.Data)
.Column(m => m.SerialNumber).Name("流水号").End()
.Column(m => m.BuyUserCode).Name("买家编号").End()
.Column(m => m.SellUserCode).Name("卖家编号").End()
.Column(m => m.Total).Name("数额").End()
.Column(m => m.LastStatus).Name("投诉前的状态").Value(m => TradeHandler.Element(m.LastStatus).BuyerStatus).End()
.Column(m => m.Status).Name("状态").Value(m => TradeHandler.Element(m.Status).BuyerStatus).End()
.Column(m => m.CreateDate).Name("匹配日期").End()
.ActionColumn(@<span>
    @Html.ActionLink("修改信息", "EditTradeUser", new { tradeUserId = item.Id })
    @Html.ActionLink("留言", "TradeMessage", new { tradeUserId = item.Id })
    @Html.ActionLink("解冻订单", "TradeUnLock", new { tradeUserId = item.Id }, new { @onclick = "return confirm('确认?')" })
    @Html.ActionLink("处理买家", "ChuliTradeUser", new { tradeUserId = item.Id }, new { onclick = "return confirm('本操作将冻结买家帐号,并删除本次匹配,卖单重新排队匹配,确认?')" })
@*    @if (item.Status == TradeHandler.LockBuyer.Id)
    {
        @Html.ActionLink("处理买家", "ChuliBuyer", new { tradeUserId = item.Id }, new { onclick = "return confirm('本操作将冻结买家帐号,并删除本次匹配,卖单重新排队匹配,确认?')" })
    }
    @if (item.Status == TradeHandler.LockSeller.Id)
    {
        @Html.ActionLink("处理卖家", "ChuliSeller", new { tradeUserId = item.Id }, new { onclick = "return confirm('确认替卖家确认收款,并冻结卖家帐号?')" })    
    }*@
</span>).End()
.Render())

@Html.Page(Model)